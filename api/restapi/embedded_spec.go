// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Solar Sero Scrape.",
    "title": "Solar Zero Scrape API",
    "contact": {
      "name": "Source Code",
      "url": "https://gitea.winters.org.nz/mathew/solar-zero-scrape-golang"
    },
    "license": {
      "name": "Apache License",
      "url": "https://gitea.winters.org.nz/mathew/solar-zero-scrape-golang/src/branch/master/LICENSE"
    },
    "version": "2.0"
  },
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "description": "gets latest data",
        "produces": [
          "application/json"
        ],
        "tags": [
          "HTTP API"
        ],
        "summary": "Index",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "used by Kubernetes liveness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Liveness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/panic": {
      "get": {
        "description": "crashes the process with exit code 255",
        "tags": [
          "HTTP API"
        ],
        "summary": "Panic",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "description": "used by Kubernetes readiness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Readiness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Solar Sero Scrape.",
    "title": "Solar Zero Scrape API",
    "contact": {
      "name": "Source Code",
      "url": "https://gitea.winters.org.nz/mathew/solar-zero-scrape-golang"
    },
    "license": {
      "name": "Apache License",
      "url": "https://gitea.winters.org.nz/mathew/solar-zero-scrape-golang/src/branch/master/LICENSE"
    },
    "version": "2.0"
  },
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "description": "gets latest data",
        "produces": [
          "application/json"
        ],
        "tags": [
          "HTTP API"
        ],
        "summary": "Index",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "used by Kubernetes liveness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Liveness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/panic": {
      "get": {
        "description": "crashes the process with exit code 255",
        "tags": [
          "HTTP API"
        ],
        "summary": "Panic",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "description": "used by Kubernetes readiness probe",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Kubernetes"
        ],
        "summary": "Readiness check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  }
}`))
}
