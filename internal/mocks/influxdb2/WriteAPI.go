// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	api "github.com/influxdata/influxdb-client-go/v2/api"
	mock "github.com/stretchr/testify/mock"

	write "github.com/influxdata/influxdb-client-go/v2/api/write"
)

// WriteAPI is an autogenerated mock type for the WriteAPI type
type WriteAPI struct {
	mock.Mock
}

type WriteAPI_Expecter struct {
	mock *mock.Mock
}

func (_m *WriteAPI) EXPECT() *WriteAPI_Expecter {
	return &WriteAPI_Expecter{mock: &_m.Mock}
}

// Errors provides a mock function with given fields:
func (_m *WriteAPI) Errors() <-chan error {
	ret := _m.Called()

	var r0 <-chan error
	if rf, ok := ret.Get(0).(func() <-chan error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan error)
		}
	}

	return r0
}

// WriteAPI_Errors_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Errors'
type WriteAPI_Errors_Call struct {
	*mock.Call
}

// Errors is a helper method to define mock.On call
func (_e *WriteAPI_Expecter) Errors() *WriteAPI_Errors_Call {
	return &WriteAPI_Errors_Call{Call: _e.mock.On("Errors")}
}

func (_c *WriteAPI_Errors_Call) Run(run func()) *WriteAPI_Errors_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *WriteAPI_Errors_Call) Return(_a0 <-chan error) *WriteAPI_Errors_Call {
	_c.Call.Return(_a0)
	return _c
}

// Flush provides a mock function with given fields:
func (_m *WriteAPI) Flush() {
	_m.Called()
}

// WriteAPI_Flush_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Flush'
type WriteAPI_Flush_Call struct {
	*mock.Call
}

// Flush is a helper method to define mock.On call
func (_e *WriteAPI_Expecter) Flush() *WriteAPI_Flush_Call {
	return &WriteAPI_Flush_Call{Call: _e.mock.On("Flush")}
}

func (_c *WriteAPI_Flush_Call) Run(run func()) *WriteAPI_Flush_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *WriteAPI_Flush_Call) Return() *WriteAPI_Flush_Call {
	_c.Call.Return()
	return _c
}

// SetWriteFailedCallback provides a mock function with given fields: cb
func (_m *WriteAPI) SetWriteFailedCallback(cb api.WriteFailedCallback) {
	_m.Called(cb)
}

// WriteAPI_SetWriteFailedCallback_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetWriteFailedCallback'
type WriteAPI_SetWriteFailedCallback_Call struct {
	*mock.Call
}

// SetWriteFailedCallback is a helper method to define mock.On call
//  - cb api.WriteFailedCallback
func (_e *WriteAPI_Expecter) SetWriteFailedCallback(cb interface{}) *WriteAPI_SetWriteFailedCallback_Call {
	return &WriteAPI_SetWriteFailedCallback_Call{Call: _e.mock.On("SetWriteFailedCallback", cb)}
}

func (_c *WriteAPI_SetWriteFailedCallback_Call) Run(run func(cb api.WriteFailedCallback)) *WriteAPI_SetWriteFailedCallback_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.WriteFailedCallback))
	})
	return _c
}

func (_c *WriteAPI_SetWriteFailedCallback_Call) Return() *WriteAPI_SetWriteFailedCallback_Call {
	_c.Call.Return()
	return _c
}

// WritePoint provides a mock function with given fields: point
func (_m *WriteAPI) WritePoint(point *write.Point) {
	_m.Called(point)
}

// WriteAPI_WritePoint_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WritePoint'
type WriteAPI_WritePoint_Call struct {
	*mock.Call
}

// WritePoint is a helper method to define mock.On call
//  - point *write.Point
func (_e *WriteAPI_Expecter) WritePoint(point interface{}) *WriteAPI_WritePoint_Call {
	return &WriteAPI_WritePoint_Call{Call: _e.mock.On("WritePoint", point)}
}

func (_c *WriteAPI_WritePoint_Call) Run(run func(point *write.Point)) *WriteAPI_WritePoint_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*write.Point))
	})
	return _c
}

func (_c *WriteAPI_WritePoint_Call) Return() *WriteAPI_WritePoint_Call {
	_c.Call.Return()
	return _c
}

// WriteRecord provides a mock function with given fields: line
func (_m *WriteAPI) WriteRecord(line string) {
	_m.Called(line)
}

// WriteAPI_WriteRecord_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteRecord'
type WriteAPI_WriteRecord_Call struct {
	*mock.Call
}

// WriteRecord is a helper method to define mock.On call
//  - line string
func (_e *WriteAPI_Expecter) WriteRecord(line interface{}) *WriteAPI_WriteRecord_Call {
	return &WriteAPI_WriteRecord_Call{Call: _e.mock.On("WriteRecord", line)}
}

func (_c *WriteAPI_WriteRecord_Call) Run(run func(line string)) *WriteAPI_WriteRecord_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *WriteAPI_WriteRecord_Call) Return() *WriteAPI_WriteRecord_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewWriteAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewWriteAPI creates a new instance of WriteAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWriteAPI(t mockConstructorTestingTNewWriteAPI) *WriteAPI {
	mock := &WriteAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
