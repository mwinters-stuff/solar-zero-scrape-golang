// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Expression is an autogenerated mock type for the Expression type
type Expression struct {
	mock.Mock
}

type Expression_Expecter struct {
	mock *mock.Mock
}

func (_m *Expression) EXPECT() *Expression_Expecter {
	return &Expression_Expecter{mock: &_m.Mock}
}

type mockConstructorTestingTNewExpression interface {
	mock.TestingT
	Cleanup(func())
}

// NewExpression creates a new instance of Expression. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExpression(t mockConstructorTestingTNewExpression) *Expression {
	mock := &Expression{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
