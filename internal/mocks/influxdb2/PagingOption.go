// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	api "github.com/influxdata/influxdb-client-go/v2/api"
	mock "github.com/stretchr/testify/mock"
)

// PagingOption is an autogenerated mock type for the PagingOption type
type PagingOption struct {
	mock.Mock
}

type PagingOption_Expecter struct {
	mock *mock.Mock
}

func (_m *PagingOption) EXPECT() *PagingOption_Expecter {
	return &PagingOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: p
func (_m *PagingOption) Execute(p *api.Paging) {
	_m.Called(p)
}

// PagingOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type PagingOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//  - p *api.Paging
func (_e *PagingOption_Expecter) Execute(p interface{}) *PagingOption_Execute_Call {
	return &PagingOption_Execute_Call{Call: _e.mock.On("Execute", p)}
}

func (_c *PagingOption_Execute_Call) Run(run func(p *api.Paging)) *PagingOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*api.Paging))
	})
	return _c
}

func (_c *PagingOption_Execute_Call) Return() *PagingOption_Execute_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewPagingOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewPagingOption creates a new instance of PagingOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPagingOption(t mockConstructorTestingTNewPagingOption) *PagingOption {
	mock := &PagingOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
