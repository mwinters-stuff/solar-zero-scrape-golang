// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	influxdb2 "github.com/influxdata/influxdb-client-go/v2"
	mock "github.com/stretchr/testify/mock"

	solarzero "github.com/mwinters-stuff/solar-zero-scrape-golang/solarzero"
)

// InfluxDBWriter is an autogenerated mock type for the InfluxDBWriter type
type InfluxDBWriter struct {
	mock.Mock
}

type InfluxDBWriter_Expecter struct {
	mock *mock.Mock
}

func (_m *InfluxDBWriter) EXPECT() *InfluxDBWriter_Expecter {
	return &InfluxDBWriter_Expecter{mock: &_m.Mock}
}

// Connect provides a mock function with given fields: client
func (_m *InfluxDBWriter) Connect(client influxdb2.Client) error {
	ret := _m.Called(client)

	var r0 error
	if rf, ok := ret.Get(0).(func(influxdb2.Client) error); ok {
		r0 = rf(client)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InfluxDBWriter_Connect_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Connect'
type InfluxDBWriter_Connect_Call struct {
	*mock.Call
}

// Connect is a helper method to define mock.On call
//  - client influxdb2.Client
func (_e *InfluxDBWriter_Expecter) Connect(client interface{}) *InfluxDBWriter_Connect_Call {
	return &InfluxDBWriter_Connect_Call{Call: _e.mock.On("Connect", client)}
}

func (_c *InfluxDBWriter_Connect_Call) Run(run func(client influxdb2.Client)) *InfluxDBWriter_Connect_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(influxdb2.Client))
	})
	return _c
}

func (_c *InfluxDBWriter_Connect_Call) Return(_a0 error) *InfluxDBWriter_Connect_Call {
	_c.Call.Return(_a0)
	return _c
}

// HasWriteError provides a mock function with given fields:
func (_m *InfluxDBWriter) HasWriteError() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// InfluxDBWriter_HasWriteError_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HasWriteError'
type InfluxDBWriter_HasWriteError_Call struct {
	*mock.Call
}

// HasWriteError is a helper method to define mock.On call
func (_e *InfluxDBWriter_Expecter) HasWriteError() *InfluxDBWriter_HasWriteError_Call {
	return &InfluxDBWriter_HasWriteError_Call{Call: _e.mock.On("HasWriteError")}
}

func (_c *InfluxDBWriter_HasWriteError_Call) Run(run func()) *InfluxDBWriter_HasWriteError_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *InfluxDBWriter_HasWriteError_Call) Return(_a0 bool) *InfluxDBWriter_HasWriteError_Call {
	_c.Call.Return(_a0)
	return _c
}

// WriteCurrentData provides a mock function with given fields: scrape
func (_m *InfluxDBWriter) WriteCurrentData(scrape solarzero.SolarZeroScrape) {
	_m.Called(scrape)
}

// InfluxDBWriter_WriteCurrentData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteCurrentData'
type InfluxDBWriter_WriteCurrentData_Call struct {
	*mock.Call
}

// WriteCurrentData is a helper method to define mock.On call
//  - scrape solarzero.SolarZeroScrape
func (_e *InfluxDBWriter_Expecter) WriteCurrentData(scrape interface{}) *InfluxDBWriter_WriteCurrentData_Call {
	return &InfluxDBWriter_WriteCurrentData_Call{Call: _e.mock.On("WriteCurrentData", scrape)}
}

func (_c *InfluxDBWriter_WriteCurrentData_Call) Run(run func(scrape solarzero.SolarZeroScrape)) *InfluxDBWriter_WriteCurrentData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(solarzero.SolarZeroScrape))
	})
	return _c
}

func (_c *InfluxDBWriter_WriteCurrentData_Call) Return() *InfluxDBWriter_WriteCurrentData_Call {
	_c.Call.Return()
	return _c
}

// WriteData provides a mock function with given fields: scrape
func (_m *InfluxDBWriter) WriteData(scrape solarzero.SolarZeroScrape) {
	_m.Called(scrape)
}

// InfluxDBWriter_WriteData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteData'
type InfluxDBWriter_WriteData_Call struct {
	*mock.Call
}

// WriteData is a helper method to define mock.On call
//  - scrape solarzero.SolarZeroScrape
func (_e *InfluxDBWriter_Expecter) WriteData(scrape interface{}) *InfluxDBWriter_WriteData_Call {
	return &InfluxDBWriter_WriteData_Call{Call: _e.mock.On("WriteData", scrape)}
}

func (_c *InfluxDBWriter_WriteData_Call) Run(run func(scrape solarzero.SolarZeroScrape)) *InfluxDBWriter_WriteData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(solarzero.SolarZeroScrape))
	})
	return _c
}

func (_c *InfluxDBWriter_WriteData_Call) Return() *InfluxDBWriter_WriteData_Call {
	_c.Call.Return()
	return _c
}

// WriteDayData provides a mock function with given fields: scrape
func (_m *InfluxDBWriter) WriteDayData(scrape solarzero.SolarZeroScrape) {
	_m.Called(scrape)
}

// InfluxDBWriter_WriteDayData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteDayData'
type InfluxDBWriter_WriteDayData_Call struct {
	*mock.Call
}

// WriteDayData is a helper method to define mock.On call
//  - scrape solarzero.SolarZeroScrape
func (_e *InfluxDBWriter_Expecter) WriteDayData(scrape interface{}) *InfluxDBWriter_WriteDayData_Call {
	return &InfluxDBWriter_WriteDayData_Call{Call: _e.mock.On("WriteDayData", scrape)}
}

func (_c *InfluxDBWriter_WriteDayData_Call) Run(run func(scrape solarzero.SolarZeroScrape)) *InfluxDBWriter_WriteDayData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(solarzero.SolarZeroScrape))
	})
	return _c
}

func (_c *InfluxDBWriter_WriteDayData_Call) Return() *InfluxDBWriter_WriteDayData_Call {
	_c.Call.Return()
	return _c
}

// WriteMonthData provides a mock function with given fields: scrape
func (_m *InfluxDBWriter) WriteMonthData(scrape solarzero.SolarZeroScrape) {
	_m.Called(scrape)
}

// InfluxDBWriter_WriteMonthData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteMonthData'
type InfluxDBWriter_WriteMonthData_Call struct {
	*mock.Call
}

// WriteMonthData is a helper method to define mock.On call
//  - scrape solarzero.SolarZeroScrape
func (_e *InfluxDBWriter_Expecter) WriteMonthData(scrape interface{}) *InfluxDBWriter_WriteMonthData_Call {
	return &InfluxDBWriter_WriteMonthData_Call{Call: _e.mock.On("WriteMonthData", scrape)}
}

func (_c *InfluxDBWriter_WriteMonthData_Call) Run(run func(scrape solarzero.SolarZeroScrape)) *InfluxDBWriter_WriteMonthData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(solarzero.SolarZeroScrape))
	})
	return _c
}

func (_c *InfluxDBWriter_WriteMonthData_Call) Return() *InfluxDBWriter_WriteMonthData_Call {
	_c.Call.Return()
	return _c
}

// WriteYearData provides a mock function with given fields: scrape
func (_m *InfluxDBWriter) WriteYearData(scrape solarzero.SolarZeroScrape) {
	_m.Called(scrape)
}

// InfluxDBWriter_WriteYearData_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'WriteYearData'
type InfluxDBWriter_WriteYearData_Call struct {
	*mock.Call
}

// WriteYearData is a helper method to define mock.On call
//  - scrape solarzero.SolarZeroScrape
func (_e *InfluxDBWriter_Expecter) WriteYearData(scrape interface{}) *InfluxDBWriter_WriteYearData_Call {
	return &InfluxDBWriter_WriteYearData_Call{Call: _e.mock.On("WriteYearData", scrape)}
}

func (_c *InfluxDBWriter_WriteYearData_Call) Run(run func(scrape solarzero.SolarZeroScrape)) *InfluxDBWriter_WriteYearData_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(solarzero.SolarZeroScrape))
	})
	return _c
}

func (_c *InfluxDBWriter_WriteYearData_Call) Return() *InfluxDBWriter_WriteYearData_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewInfluxDBWriter interface {
	mock.TestingT
	Cleanup(func())
}

// NewInfluxDBWriter creates a new instance of InfluxDBWriter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInfluxDBWriter(t mockConstructorTestingTNewInfluxDBWriter) *InfluxDBWriter {
	mock := &InfluxDBWriter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
