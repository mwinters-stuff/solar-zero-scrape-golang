# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - "v*.*.*"    

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build -o solar-zero-scrape ./cmd/solar-zero-scrape-api-server/main.go

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ github.repository }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha            

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Set Chart version
      uses: mikefarah/yq@v4.43.1
      with:
        cmd: yq -i '.version = "${{ steps.meta.outputs.version }}" | .appVersion = "${{ steps.meta.outputs.version }}"' charts/solar-zero-scrape/Chart.yaml

    - name: set image tag in values.yaml
      uses: mikefarah/yq@v4.43.1
      with:
        cmd: yq -i '.image.tag = "${{ steps.meta.outputs.version }}"' charts/solar-zero-scrape/values.yaml

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Install Helm
      uses: azure/setup-helm@v4.1.0

    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.6.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"