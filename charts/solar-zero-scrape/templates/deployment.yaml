apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "solar-zero-scrape.fullname" . }}
  labels:
    {{- include "solar-zero-scrape.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      {{- include "solar-zero-scrape.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "solar-zero-scrape.selectorLabels" . | nindent 8 }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 30
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "solar-zero-scrape.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- else if (or .Values.service.hostPort .Values.tls.hostPort) }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          {{- end }}
          env:
            name: TZ
            value: {{ .Values.TimeZone }}

          command:
            - ./solar-zero-scrape
            - --port={{ .Values.service.httpPort | default 9898 }}
            {{- if .Values.host }}
            - --host={{ .Values.host }}
            {{- end }}
            {{- if .Values.tls.enabled }}
            - --secure-port={{ .Values.tls.port }}
            {{- end }}
            # {{- if .Values.tls.certPath }}
            # - --cert-path={{ .Values.tls.certPath }}
            # {{- end }}
            {{- if .Values.logLevel }}
            - --level={{ .Values.logLevel }}
            {{- end }}

            {{- if .Values.solarZero.username }}
            - --solarzero-username={{ .Values.solarZero.username }}
            {{- end }}
            {{- if .Values.solarZero.password }}
            - --solarzero-password={{ .Values.solarZero.password }}
            {{- end }}
            {{- if .Values.influxdb.hostUrl }}
            - --influx-host-url={{ .Values.influxdb.hostUrl }}
            {{- end }}
            {{- if .Values.influxdb.token }}
            - --influx-token={{ .Values.influxdb.token }}
            {{- end }}
            {{- if .Values.influxdb.org }}
            - --influx-org={{ .Values.influxdb.org }}
            {{- end }}
            {{- if .Values.influxdb.bucket }}
            - --influx-bucket={{ .Values.influxdb.bucket }}
            {{- end }}

            {{- if .Values.mqtt.hosturl }}
            - --mqtt-server-url={{ .Values.mqtt.hosturl }}
            {{- end }}
            {{- if .Values.mqtt.topic }}
            - --mqtt-topic={{ .Values.mqtt.topic }}
            {{- end }}
            {{- if .Values.mqtt.username }}
            - --mqtt-username={{ .Values.mqtt.username }}
            {{- end }}
            {{- if .Values.mqtt.password }}
            - --mqtt-password={{ .Values.mqtt.password }}
            {{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort | default 9898 }}
              protocol: TCP
              {{- if .Values.service.hostPort }}
              hostPort: {{ .Values.service.hostPort }}
              {{- end }}
            {{- if .Values.tls.enabled }}
            - name: https
              containerPort: {{ .Values.tls.port | default 9899 }}
              protocol: TCP
              {{- if .Values.tls.hostPort }}
              hostPort: {{ .Values.tls.hostPort }}
              {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
                path: /healthz
                port: {{ .Values.service.httpPort | default 9898 }}
            {{- with .Values.probes.liveness }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 10 }}
            timeoutSeconds: {{ .timeoutSeconds | default 5 }}
            failureThreshold: {{ .failureThreshold | default 3 }}
            successThreshold: {{ .successThreshold | default 1 }}
            periodSeconds: {{ .periodSeconds | default 60 }}
            {{- end }}
          readinessProbe:
            httpGet:
                path: /readyz
                port: {{ .Values.service.httpPort | default 9898 }}
            {{- with .Values.probes.readiness }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 10 }}
            timeoutSeconds: {{ .timeoutSeconds | default 5 }}
            failureThreshold: {{ .failureThreshold | default 3 }}
            successThreshold: {{ .successThreshold | default 1 }}
            periodSeconds: {{ .periodSeconds | default 60 }}
            {{- end }}
          volumeMounts:
          - name: data
            mountPath: /data
          {{- if .Values.tls.enabled }}
          - name: tls
            mountPath: {{ .Values.tls.certPath | default "/data/cert" }}
            readOnly: true
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: data
        emptyDir: {}
      {{- if .Values.tls.enabled }}
      - name: tls
        secret:
          secretName: {{ template "solar-zero-scrape.tlsSecretName" . }}
      {{- end }}
